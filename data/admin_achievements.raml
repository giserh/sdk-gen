displayName: Achievements
type : common
post:
  description: |
    Use this method to create a new achievement. It needs a body and a returns the created object.
  body:
    application/json: 
      example: !include examples/admin/achievement_post_example.json
      schema: !include schemas/admin_achievement_schema.json
  responses:
      200:
        body: 
          application/json:
            example: !include examples/admin/achievement_example.json
            schema: !include schemas/admin_achievement_schema.json
get:
  is: [fields, ordering, segments, groups, paginator]
  description: Get a list of achievements.
  responses:
      200:
        body: 
          application/json:
            example: !include examples/admin/achievement_list_example.json
            schema: !include schemas/admin_achievement_schema.json
/{achievementId}:
  type : common
  displayName: Achievement
  get:
    is: [fields]
    description: Get one achievement. 
    responses:
      200:
        body: 
          application/json:
            example: !include examples/admin/achievement_example.json
            schema: !include schemas/admin_achievement_schema.json
  put:    
    description: Update one achievement. 
    body:
      application/json: 
        example: !include examples/admin/achievement_post_example.json
        schema: !include schemas/admin_achievement_schema.json
  delete:
    description: Delete one achievement. 
  /segments:
    type: common
    displayName: AchievementSegments
    /{childId}:
      type : common
      displayName: AchievementSegment
      put:    
        description: Add segment to achievement. 
      delete:    
        description: Delete segment from achievement. 
/categories:
  type: common
  displayName: AchievementsCategories
  post:
    description: Create new category. 
    body:
      application/json: 
        schema: !include schemas/category_schema.json
        example: !include examples/admin/achievementcategory_post_example.json
    responses:
      200:
        body:
          application/json:
            example: !include examples/admin/achievementcategory_example.json
            schema: !include schemas/category_schema.json
  get:
    description: Get list of categories.
    is: [fields, ordering, paginator]
    responses:
      200:
        body:
          application/json:
            example: !include examples/admin/achievementcategory_list_example.json
            schema: !include schemas/category_schema.json
  /doc:
    type: common
    displayName: AchievementsCategoriesDoc    
    get:
      description: Get a pseudo schema for category.
      responses:
        200:
          body:
            application/json:
              example: !include schemas/category_schema.json
  /{id}:
    type: common
    displayName: AchievementsCategory
    get:
      description: Get one category.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/achievementcategory_example.json
              schema: !include schemas/category_schema.json
    put:
      description: Update achievement category. 
      body:
        application/json: 
          schema: !include schemas/category_schema.json
          example: !include examples/admin/achievementcategory_post_example.json
    delete:
      description: Delete one achievements category.
    /achievements:
      type: common
      displayName: CategoryAchievements
      /{childId}:
        type: common
        displayName: CategoryAchievement
        put:
          description: Add one achievement to achievements category.
        delete:
          description: Delete one achievement from achievements category. 
/groups:
  type: common
  displayName: AchievementsGroups
  post:
    description: Create a new achievement group. This method needs a body and returns the created object.
    body:
      application/json: 
        schema: !include schemas/achievement_group_schema.json
        example: !include examples/admin/achievementgroup_post_example.json     
    responses:
      200:
        body:
          application/json:
            example: !include examples/admin/achievementgroup_example.json   
            schema: !include schemas/achievement_group_schema.json   
  get:
    description: Get a list achievement groups. 
    is: [fields, ordering, paginator]
    responses:
        200:
          body:
            application/json:
              example: !include examples/admin/achievementgroup_list_example.json   
              schema: !include schemas/achievement_group_schema.json
  /doc:
    type: common
    displayName: AchievementsGroupsDoc
    get:
      description: Get a schema for group. It shows how to create a new group.
      responses:
        200:
          body:
            application/json:
              example: !include schemas/achievement_group_schema.json
  /{id}:
    displayName: AchievementsGroup
    type: common
    get:
      description: Get one achievement group. 
      is: [fields]
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/achievementgroup_example.json   
              schema: !include schemas/achievement_group_schema.json
    put:
      description: Update an achievement group.
      body:
        application/json: 
          schema: !include schemas/achievement_group_schema.json
          example: !include examples/admin/achievementgroup_post_example.json   
    delete:
      description: Delete an achievement group.
    /achievements:
      type: common
      displayName: GroupAchievements
      /{childId}:
        type: common
        displayName: GroupAchievement
        put:
          description: Add one achievement to achievements group.
        delete:
          description: Delete one achievement from achievements group.
/progress:
  type: common
  displayName: AchievementsProgresses
  post:
    description: Create a new achievement progress.
    body:
      application/json: 
        schema: !include schemas/achievement_progress_schema.json
        example: !include examples/admin/achievementprogress_post_example.json   
    responses:
      200:
        body:
          application/json:
            example: !include examples/admin/achievementprogress_example.json   
            schema: !include schemas/achievement_progress_schema.json
  get:
    description: Get achievement progress list. 
    is: [fields, ordering, paginator]
    responses:
        200:
          body:
            application/json:
              example: !include examples/admin/achievementprogress_list_example.json   
              schema: !include schemas/achievement_progress_schema.json
            
  /doc:
    type: common
    displayName: AchievementsProgressesDoc
    get:
      description: Get a schema for achievement progress.
      responses:
        200:
          body:
            application/json:
              example: !include schemas/achievement_progress_schema.json
  /{id}:
    displayName: AchievementsProgress
    type: common
    get:
      description: Get one achievement progress. 
      is: [fields]
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/achievementprogress_example.json   
              schema: !include schemas/achievement_progress_schema.json
    put:
      description: Update an achievement progress.
      body:
        application/json: 
          example: !include examples/admin/achievementprogress_post_example.json  
          schema: !include schemas/achievement_progress_schema.json
    delete:
      description: Delete an achievement progress.