displayName: UserGroups
type: common
post:
  description: Add a user group.
  body:
    application/json:
      schema: !include schemas/admin_user_group_schema.json
      example: !include examples/admin/usergroup_example.json
get:
  is: [fields, paginator, ordering, segments]
  description: Get a list of user groups.
  responses:
    200:
      body:
        application/json:
          example: !include examples/admin/usergroup_list_example.json
          schema: !include schemas/admin_user_group_schema.json
/doc:
  displayName: UserGroupsDoc
  type: common
  get:
    description: Get a schema showing how to make a proper json for user group.
    responses:
      200:
        body:
          application/json:
            example: !include schemas/admin_user_group_schema.json
/{id}:
  displayName: OneUserGroup
  type: common
  get:
    description: Get a user group.
    responses:
      200:
        body:
          application/json:
            example: !include examples/admin/usergroup_example.json
            schema: !include schemas/admin_user_group_schema.json
  put:
    description: Update a user group.
    body:
      application/json:
        schema: !include schemas/admin_user_group_schema.json
        example: !include examples/admin/usergroup_example.json
  delete:
    description: Delete a user group.
  /customfields:
    displayName: UserGroupCustomFields
    type: common
    put:
      description: Create a new custom field for user group.
      body:
        application/json:
          schema: !include schemas/TODO.json
          example: !include schemas/TODO.json
    /{key}:
      displayName: UserGroupCustomField
      type: common
      delete:
        description: Delete a custom field by key.
  /externalids:
    displayName: UserGroupExternalIds
    type: common
    post:
      description: Add an external group id.
      body:
        application/json:
          schema: !include schemas/externalid_schema.json
          example: !include examples/admin/externalid_example.json
    get:
      is: [fields, ordering, paginator]
      description: Get a list of external ids.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/externalid_list_example.json
              schema: !include schemas/externalid_schema.json
    /{childId}:
      displayName: OneUserGroupExternalId
      type: common
      get:
        description: Get an external group id.
        responses:
          200:
            body:
              application/json:
                example: !include examples/admin/externalid_example.json
                schema: !include schemas/externalid_schema.json
      put:
        description: Update an external group id.
        body:
          application/json:
            schema: !include schemas/externalid_schema.json
            example: !include examples/admin/externalid_example.json
      delete:
        description: Remove an external group id.
    /doc:
      displayName: UserGroupExternalIdsDocs
      type: common
      get:
        description: Get a schema showing how to make a proper json for user group external ids.
        responses:
          200:
            body:
              application/json:
                example: !include schemas/externalid_schema.json
  /users:
    displayName: UserGroupFriends
    type: common
    /{childId}:
      displayName: OneUserGroupFriend
      type: common
      put:
        description: Add a user to user group.
      delete:
        description: Delete a user from user group.
  /gainedachievements:
    displayName: UserGroupGainedAchievements
    type: common
    post:
      description: Create a gained achievement for a group.
      body:
        application/json:
          example: !include examples/admin/gainedachievement_example.json
          schema: !include schemas/gained_achievement_schema.json
    get:
      is: [fields, paginator, ordering]
      description: Get a list of gained achievements for a group.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/gainedachievement_list_example.json
              schema: !include schemas/gained_achievement_schema.json
    /{childId}:
      displayName: OneUserGroupGainedAchievement
      type: common
      get:
        description: Get a gained achievement for a group by id.
        responses:
          200:
            body:
              application/json:
                example: !include examples/admin/gainedachievement_example.json
                schema: !include schemas/gained_achievement_schema.json
      put:
        description: Update a gained achievement for a group by id.
        body:
          application/json:
            schema: !include schemas/gained_achievement_schema.json
            example: !include examples/admin/gainedachievement_example.json
      delete:
        description: Delete a gained achievement for a group by id.
    /doc:
      displayName: UserGroupGainedAchievementDocs
      type: common
      get:
        description: Get a schema showing how to make a proper json for user group gained achivements.
        responses:
          200:
            body:
              application/json:
                example: !include schemas/gained_achievement_schema.json
  /wongames:
    displayName: UserGroupWonGames
    type: common
    post:
      description: Create a won game for user group.
      body:
        application/json:
          schema: !include schemas/won_game_schema.json
          example: !include examples/admin/wongame_example.json
    get:
      is: [fields, paginator, ordering]
      description: Get a list of user group won games.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/wongame_list_example.json
              schema: !include schemas/won_game_schema.json
    /{childId}:
      displayName: OneUserGroupWonGame
      type: common
      get:
        description: Get a won game for user group by id.
        responses:
          200:
            body:
              application/json:
                schema: !include schemas/won_game_schema.json
                example: !include examples/admin/wongame_example.json
      put:
        description: Update a won game for user group by id.
        body:
          application/json:
            schema: !include schemas/won_game_schema.json
            example: !include examples/admin/wongame_example.json
      delete:
        description: Delete a won game for user group by id.
    /doc:
      displayName: UserGroupWonGameDoc
      type: common
      get:
        description: Get a schema showing how to make a proper json for user group won games.
        responses:
          200:
            body:
              application/json:
                schema: !include examples/admin/wongame_example.json
  /segments:
    displayName: UserGroupSegments
    type: common
    /{childId}:
      displayName: OneUserGroupSegment
      type: common
      put:
        description: Add a segment to a user group.
      delete:
        description: Remove a segment from a user group.
  /countervalues:
    displayName: UserGroupCounterValues
    type: common
    post:
      description: Create a new counter value.
      body:
        application/json:
          example: !include examples/admin/countervalue_example.json
          schema: !include schemas/counter_value_schema.json
    get:
      is: [fields, paginator, ordering]
      description: Get a list of counter values fro a user group.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/countervalue_list_example.json
              schema: !include schemas/counter_value_schema.json
    /{childId}:
      displayName: OneUserGroupCounterValue
      type: common
      get:
        description: Get one counter value for a user group.
        responses:
          200:
            body:
              application/json:
                example: !include examples/admin/countervalue_example.json
                schema: !include schemas/counter_value_schema.json
      put:
        description: Update one counter value for a user group.
        body:
          application/json:
            schema: !include schemas/counter_value_schema.json
            example: !include examples/admin/countervalue_example.json
      delete:
        description: Remove one counter value from a user group.
    /doc:
      displayName: OneUserGroupCounterValueDoc
      type: common
      get:
        description: Get a schema showing how to make a proper json for user group counter value.
        responses:
          200:
            body:
              application/json:
                example: !include schemas/counter_value_schema.json