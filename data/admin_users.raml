displayName: Users
type: common
post:
  description: Add a user.
  body:
    application/json:
      example: !include examples/admin/user_example.json
      schema: !include schemas/admin_user.json
get:
  is: [fields, paginator, ordering, groups, segments]
  description: Get a list of users.
  responses:
    200:
      body:
        application/json:
          example: !include examples/admin/user_list_example.json
          schema: !include schemas/admin_user.json
/groups: !include  admin_usergroup.raml
/doc:
  displayName: UsersDoc
  type: common
  get:
    description: Get a schema showing how to make a proper json for users.
    responses:
      200:
        body:
          application/json:
            example: !include schemas/admin_user.json
/{id}:
  displayName: OneUser
  type: common
  get:
    description: Get one user by id.
    responses:
      200:
        body:
          application/json:
            example: !include examples/admin/user_example.json
            schema: !include schemas/admin_user.json
  put:
    description: Update one user by id.
    body:
      application/json:
        schema: !include schemas/admin_user.json
        example: !include examples/admin/user_example.json
  delete:
    description: Delete one user
  /externalids:
    displayName: UserExternalIds
    type: common
    post:
      description: Create a new external id.
      body:        
        application/json:
          schema: !include schemas/externalid_schema.json
          example: !include examples/admin/externalid_example.json
    get:
      is: [fields, paginator, ordering]
      description: Get a list of external ids.
      responses:
        200:
          body:
            application/json:
              schema: !include schemas/externalid_schema.json
              example: !include examples/admin/externalid_list_example.json
    /{childId}:
      displayName: OneUserExternalId
      type: common
      get:
        description: Get one external id for a user.
        responses:
          200:
            body:
              application/json:
                schema: !include schemas/externalid_schema.json
                example: !include examples/admin/externalid_example.json
      put:
        description: Update one external id for a user.
        body:
          application/json:
            schema: !include schemas/externalid_schema.json
            example: !include examples/admin/externalid_example.json
      delete:
        description: Delete one external id for a user.
    /doc:
      displayName: UserExternalIdsDoc
      type: common
      get:
        description: Get a schema showing how to make a proper json for user external ids.
        responses:
          200:
            body:
              application/json:
                schema: !include examples/admin/externalid_example.json
  /gainedachievements:
    displayName: UserGainedAchievements
    type: common
    post:
      description: Create a new gained achievement for a user.
      body:
        application/json:
          example: !include examples/admin/gainedachievement_example.json
          schema: !include schemas/gained_achievement_schema.json
    get:
      is: [paginator, ordering, fields]
      description: Get a list of gained achievements for a user.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/gainedachievement_list_example.json
              schema: !include schemas/gained_achievement_schema.json
    /{childId}:
      displayName: OneUserGainedAchievement
      type: common
      get:
        description: Get one user gained achievement.
        responses:
          200:
            body:
              application/json:
                example: !include examples/admin/gainedachievement_example.json
                schema: !include schemas/gained_achievement_schema.json
      put:
        description: Update one user gained achievement.
        body:
          application/json:
            schema: !include schemas/gained_achievement_schema.json
            example: !include examples/admin/gainedachievement_example.json
      delete:
        description: Update one user gained achievement.
    /doc:
      displayName:  OneUserGainedAchievementsDoc
      type: common
      get:
        description: Get a schema showing how to make a proper json for user gained achievement.
        responses:
          200:
            body:
              application/json:
                example: !include schemas/gained_achievement_schema.json
  /wongames:
    displayName: UserWonGames
    type: common
    post:
      description: Create a new won game for a user.
      body:
        application/json:
          schema: !include schemas/won_game_schema.json
          example: !include examples/admin/wongame_example.json
    get:
      is: [paginator, ordering, fields]
      description: Get a list of won games for a user.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/wongame_list_example.json
              schema: !include schemas/won_game_schema.json
    /{childId}:
      displayName: OneUserWonGame
      type: common
      get:
        description: Get one won game for a user.
        responses:
          200:
            body:
              application/json:
                example: !include examples/admin/wongame_example.json
                schema: !include schemas/won_game_schema.json
      put:
        description: Update one won game for a user.
        body:
          application/json:
            schema: !include schemas/won_game_schema.json
            example: !include examples/admin/wongame_example.json
      delete:
        description: Delete one won game for a user.
    /doc:
      displayName: UserWonGamesDoc
      type: common
      get:
        description: Get a pseudo schema showing quickly how to make a proper json for user won game.
        responses:
          200:
            body:
              application/json:
                example: !include schemas/won_game_schema.json
  /segments:
    displayName: UserSegments
    type: common
    /{childId}:
      displayName: OneUserSegment
      type: common
      put:
        description: Add a segment to a user.
      delete:
        description: Delete a segment from a user.
  /countervalues:
    displayName: UserCounterValues
    type: common
    post:
      description: Create a new counter value for a user.
      body:
        application/json:
          example: !include examples/admin/countervalue_example.json
          schema: !include schemas/counter_value_schema.json
    get:
      is: [paginator, fields, ordering]
      description: Get a list of counter values for a user.
      responses:
        200:
          body:
            application/json:
              example: !include examples/admin/countervalue_list_example.json
              schema: !include schemas/counter_value_schema.json
    /{childId}:
      displayName: OneUserCounterValue
      type: common
      get:
        description: Get one user counter value.
        responses:
          200:
            body:
              application/json:
                example: !include examples/admin/countervalue_example.json
                schema: !include schemas/counter_value_schema.json
      put:
        description: Update one user counter value.
        body:
          application/json:
            schema: !include schemas/counter_value_schema.json
            example: !include examples/admin/countervalue_example.json
      delete:
        description: Delete one user counter value.
    /doc:
      displayName: UserCounterValueDoc
      type: common
      get:
        description: Get a schema showing how to make a proper json for user counter values.
        responses:
          200:
            body:
              application/json:
                example: !include schemas/counter_value_schema.json
  /groups:
    displayName: GroupUser
    type: common
    /{childId}:
      displayName: OneGroupUser
      type: common
      put:
        description: Add a group to user.
      delete:
        description: Remove a group from user.
  /customfields:
    displayName: UserCustomFields
    type: common
    post:
      description: Create a new custom field for user.
      body:
        application/json:
          schema: !include schemas/customfield_schema.json
          example: !include examples/admin/customfield_example.json
      responses:
        200:
          body:
            application/json:
              schema: !include schemas/customfield_schema.json
              example: !include examples/admin/customfield_example.json
    put:
      description: Update an existing custom field for user.
      body:
        application/json:
          schema: !include schemas/customfield_schema.json
          example: !include examples/admin/customfield_example.json
    get:
      description: Get all existing custom fields for user.
      responses:
        200:
          body:
            application/json:
              schema: !include schemas/customfield_schema.json
              example: !include examples/admin/customfield_example.json
    /{key}:
      displayName: UserCustomField
      type: common
      delete:
        description: Delete a custom field by key.
      get:
        description: Get a custom field by key.
        responses:
          200:
            body:
              application/json:
                schema: !include schemas/customfield_schema.json
                example: !include examples/admin/customfield_example.json
  /friends:
    displayName: UserFriends
    type: common
    /{childId}:
      displayName: OneUserFriend
      type: common
      put:
        description: Add a friend to user.
      delete:
        description: Remove a friend from user.