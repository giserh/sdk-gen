#%RAML 0.8
---
title: IsaaCloud REST API
version: 0.1 v
protocols: [ HTTPS ]
baseUri: https://isaacloud.com/{version}/api
mediaType:  application/json
securedBy: [oauth_2_0]
traits:
 - paginator:
    queryParameters:
     offset:
      description: Number of returning items
      type: number
      minLength: 1
     limit:
      description: Starting position
      type: number
      minLength: 1
 - groups:
    queryParameters:
     groups:
      description: The groups we want to narrow down our search to
      type: string
      example: 1,2,4,5
 - segments:
    queryParameters:
     segments:
      description: The segments we want to narrow down our search to.
      type: string
      example: 1,2,4,5
 - fields:
    queryParameters:
     fields:
      description: The fields we want to show in our result
      type: string
      example: id,name,description
 - ordering:
    queryParameters:
     order:
      description: The fields we want to order by and the type of ordering.
      type: string
      example: "id,name,description"
/queue:
 displayName: Queue
 /events:
  displayName: QueueEvents
  get:
   is: [ paginator, fields, ordering]
   securedBy: [oauth_2_0]
   description: Get events for a client.
   responses:
    200:
     body:
      schema: events
    500:
     body: !include data/schemas/error_500_schema.raml
    404:
     body: !include data/schemas/error_other_schema.raml 
    400:
     body: !include data/schemas/error_other_schema.raml
  post:
   is: [fields]
   securedBy: [oauth_2_0]
   description: Create a new event.
   body:
    application/json: !include data/schemas/event_schema.raml
   responses:
    200:
     body: !include data/schemas/url_event_schema.raml
    500:
     body: !include data/schemas/error_500_schema.raml
    404:
     body: !include data/schemas/error_other_schema.raml 
    400:
     body: !include data/schemas/error_other_schema.raml
/cache:
 displayName: Cache
 /users:
  displayName: CacheUsers
  get:
   is: [ paginator, groups, segments, fields, ordering]
   securedBy: [oauth_2_0]
   description: Get users collection. 
   responses:
    200:
     body: !include data/schemas/user_schema.raml   
    500:
     body: !include data/schemas/error_500_schema.raml
    404:
     body: !include data/schemas/error_other_schema.raml 
    400:
     body: !include data/schemas/error_other_schema.raml    
  /{userId}:
   get:
    is: [fields]
    securedBy: [oauth_2_0]
    description: Get one user by id.
    responses:
     200:
      body: !include data/schemas/user_schema.raml   
     500:
      body: !include data/schemas/error_500_schema.raml
     404:
      body: !include data/schemas/error_other_schema.raml 
     400:
      body: !include data/schemas/error_other_schema.raml  
   /friends:
    get:
     is: [fields]
     securedBy: [oauth_2_0]
     description: Get one user's friends.
     responses:
      200:
       body: !include data/schemas/user_schema.raml   
      500:
       body: !include data/schemas/error_500_schema.raml
      404:
       body: !include data/schemas/error_other_schema.raml 
      400:
       body: !include data/schemas/error_other_schema.raml    
  /segments:
   get:
    is: [fields, ordering, paginator]
    securedBy: [oauth_2_0]
    description: Get users' segment list.
    responses:
     200:
      body: !include data/schemas/segment_schema.raml   
     500:
      body: !include data/schemas/error_500_schema.raml
     404:
      body: !include data/schemas/error_other_schema.raml 
     400:
      body: !include data/schemas/error_other_schema.raml
  /groups:
   get:
    is: [fields, ordering, paginator]
    securedBy: [oauth_2_0]
    description: Get users' group list.
    responses:
     200:
      body: !include data/schemas/group_schema.raml   
     500:
      body: !include data/schemas/error_500_schema.raml
     404:
      body: !include data/schemas/error_other_schema.raml 
     400:
      body: !include data/schemas/error_other_schema.raml