displayName: Users
type: common
get:
  is: [ paginator, groups, segments, fields, ordering]
  description: Get users collection. 
  responses:
    200:
      body: 
        application/json:
          example: !include examples/cache/user_list_example.json
          schema: !include schemas/user_schema.json  
/{userId}:
  displayName: OneUser
  type: common
  get:
    is: [fields]
    description: Get one user by id.
    responses:
      200:
        body: 
          application/json:
            example: !include examples/cache/user_example.json
            schema: !include schemas/user_schema.json  
  /friends:
    type: common
    displayName: UserFriends
    get:
      is: [fields, groups, segments, ordering, paginator]
      description: Get one user's friends.
      responses:
        200:
          body: 
            application/json:
              example: !include examples/cache/user_list_example.json
              schema: !include schemas/user_schema.json  
  /segments:
    type: common
    displayName: UserSegments
    get:
      is: [fields, ordering, paginator]
      description: Get one user's segments.
      responses:
        200:
          body: 
            application/json:
              example: !include examples/cache/segment_list_example.json
              schema: !include schemas/segment_schema.json  
  /groups:
    type: common
    displayName: UserGroups
    get:
      is: [fields, ordering, paginator]
      description: Get the groups the a particular user belongs to.
      responses:
        200:
          body: 
            application/json:
              example: !include examples/cache/usergroup_list_example.json
              schema: !include schemas/user_group_schema.json   
  /achievements:
    type: common
    displayName: UserAchievements
    get:
      is: [fields, ordering, paginator, segments]
      description: Get one user's achievements.
      responses:
        200:
          body: 
            application/json:
              example: !include examples/cache/achievement_list_example.json
              schema: !include schemas/achievement_schema.json
  /history:
    type: common
    displayName: UserHistory
    get:
      is: [fields, ordering, paginator]
      description: Get one user's history.
      responses:
        200:
          body: 
            application/json:
              example: !include examples/cache/history_example.json
              schema: !include schemas/history_schema.json   
/segments:
  type: common
  displayName: UsersSegments
  get:
    is: [fields, ordering, paginator]
    description: Get users' segment list.
    responses:
     200:
      body: 
        application/json:
          example: !include examples/cache/segment_list_example.json
          schema: !include schemas/segment_schema.json 
/groups:
  displayName: Groups
  type: common
  get:
    is: [ paginator, fields, ordering]
    description: Get groups collection. 
    responses:
      200:
        body: 
          application/json:
            example: !include examples/cache/usergroup_list_example.json
            schema: !include schemas/user_group_schema.json     
  /{groupId}:
    type: common
    displayName: OneGroup
    get:
      is: [fields]
      description: Get one group. 
      responses:
        200:
          body: 
            application/json:
              example: !include examples/cache/usergroup_example.json
              schema: !include schemas/user_group_schema.json  